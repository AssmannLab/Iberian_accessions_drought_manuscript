#READ TWO FILES
library(tidyverse)
library(dplyr)
library(readr)
library(ggplot2)
library(ggrepel)
library(Hmisc)
library(ggpmisc)
library(qvalue)
library(ggpubr)
library(cowplot)
library(patchwork)
library(magick)
library(png)
library(grid)

#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################

df1 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df1, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT1G55480 )
head(Transcriptselected)
df1<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df1)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
ZKT <- ggplot(df1, aes(x=AT1G55480, y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

ZKT<- ZKT + theme(axis.line = element_line(size=1, colour = "black"),
                panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
ZKT<- ZKT + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C (\u2030))"))))+   
  xlab(expression(bold(paste(bolditalic("ZKT")~"(FPKM)"))))
ZKT
png("panels/ZKT.png", width = 7, height = 7, units = 'in', res = 350)
ZKT
dev.off() 

#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################

df2 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df2, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT4G23400)
head(Transcriptselected)
df2<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df2)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
PIP1_5 <- ggplot(df2, aes(x=AT4G23400 , y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

PIP1_5<- PIP1_5 + theme(axis.line = element_line(size=1, colour = "black"),
                panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
PIP1_5<- PIP1_5 + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C)"))))+  
  xlab(expression(bold(paste(bolditalic("PIP1;5")~"(FPKM)"))))
  
PIP1_5
png("panels/PIP1_5.png", width = 7, height = 7, units = 'in', res = 350)
PIP1_5
dev.off() 

#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################

df3 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df3, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT4G37925)
head(Transcriptselected)
df3<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df3)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
NdhM <- ggplot(df3, aes(x=AT4G37925 , y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

NdhM<- NdhM + theme(axis.line = element_line(size=1, colour = "black"),
                panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
NdhM<- NdhM + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C)"))))+  
  xlab(expression(bold(paste(bolditalic("NdhM")~"(FPKM)"))))

NdhM
png("panels/NdhM.png", width = 7, height = 7, units = 'in', res = 350)
NdhM
dev.off() 

#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################

df4 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df4, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT3G54050)
head(Transcriptselected)
df4<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df4)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
HCEF1 <- ggplot(df4, aes(x=AT3G54050, y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

HCEF1<- HCEF1 + theme(axis.line = element_line(size=1, colour = "black"),
                panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
HCEF1<- HCEF1 + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C)"))))+  
  xlab(expression(bold(paste(bolditalic("HCEF1")~"(FPKM)"))))

HCEF1
png("panels/HCEF1.png", width = 7, height = 7, units = 'in', res = 350)
HCEF1
dev.off() 

#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################

df5 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df5, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT4G09650)
head(Transcriptselected)
df5<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df5)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
ATPD <- ggplot(df5, aes(x=AT4G09650, y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

ATPD<- ATPD + theme(axis.line = element_line(size=1, colour = "black"),
                panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
ATPD<- ATPD + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C)"))))+  
  xlab(expression(bold(paste(bolditalic("ATPD")~"(FPKM)"))))

ATPD
png("panels/ATPD.png", width = 7, height = 7, units = 'in', res = 350)
ATPD
dev.off() 

#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################


df8 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df8, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT5G64040)
head(Transcriptselected)
df8<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df8)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
PSAN <- ggplot(df8, aes(x=AT5G64040, y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

PSAN<- PSAN + theme(axis.line = element_line(size=1, colour = "black"),
                panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
PSAN<- PSAN + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C)"))))+  
  xlab(expression(bold(paste(bolditalic("PSAN")~"(FPKM)"))))

PSAN
png("panels/PSAN.png", width = 7, height = 7, units = 'in', res = 350)
PSAN
dev.off() 

#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################

df9 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df9, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT3G50820)
head(Transcriptselected)
df9<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df9)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
PSBO2 <- ggplot(df9, aes(x=AT3G50820, y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

PSBO2<- PSBO2 + theme(axis.line = element_line(size=1, colour = "black"),
                panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
PSBO2<- PSBO2 + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C)"))))+  
  xlab(expression(bold(paste(bolditalic("PSBO2")~"(FPKM)"))))

PSBO2
png("panels/PSBO2.png", width = 7, height = 7, units = 'in', res = 350)
PSBO2
dev.off() 
#######################################################################################################################################
#######################################################################################################################################
########################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################

df10 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df10, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT4G38850)
head(Transcriptselected)
df10<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df10)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
SAUR15 <- ggplot(df10, aes(x=AT4G38850, y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

SAUR15<- SAUR15 + theme(axis.line = element_line(size=1, colour = "black"),
                panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
SAUR15<- SAUR15 + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C)"))))+  
  xlab(expression(bold(paste(bolditalic("SAUR15")~"(FPKM)"))))

SAUR15
png("panels/SAUR15.png", width = 7, height = 7, units = 'in', res = 350)
SAUR15
dev.off() 
###################################################################################################################################################
###################################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################

df11 = read_csv("data/Iberian_d13C.csv")
head(phenotypes)


Phenotypesselected<- select(df11, accession_id, Dittberner_moleco18_Delta_13C)
head(Phenotypesselected)
transposedfinal = read_csv("data/transposedfinal.csv")
Transcriptselected<- select(transposedfinal, accession_id,AT1G04250)
head(Transcriptselected)
df11<-merge(Phenotypesselected, Transcriptselected, by = "accession_id", sort = TRUE)
head(df11)

###Plot1= altitude vs leaf area time potential, short days well-watered
formula <- y ~ x
AXR3 <- ggplot(df11, aes(x=AT1G04250, y= Dittberner_moleco18_Delta_13C)) +
  geom_point(color='black',alpha = 0.4,  size=5)+  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.5, alpha = 0.1) + stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")), 
                                                                                                         label.x.npc = "right", label.y.npc = "bottom",
                                                                                                         formula = formula, parse = TRUE, size = 6, colour="black") +  theme_bw()# +

AXR3<- AXR3 + theme(axis.line = element_line(size=1, colour = "black"),
                  panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
                  panel.border = element_blank(), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm")) 
AXR3<- AXR3 + 
  theme(axis.text = element_text(family = "Arial", color="black", face="bold",size=10)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(5, 5, 5,5)
  )+ 
  #ylim(-1,1)+
  ylab(expression(bold(paste("WUE"[i]," (\u03B4"^"13", "C)"))))+  
  xlab(expression(bold(paste(bolditalic("AXR3")~"(FPKM)"))))

AXR3
png("panels/AXR3.png", width = 7, height = 7, units = 'in', res = 350)
AXR3
dev.off() 
####################################################################################################################################################
###################################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################
#######################################################################################################################################



plot_grid(AXR3,SAUR15,NdhM, HCEF1,ATPD,PSAN,PSBO2,PIP1_5,p9,labels=c('a', 'b',"c","d","e","f","g"), greedy = TRUE, ncol =2, nrow = 4, align = 'v', hjust=0, label_size=35)
png("Figure S8.png", width = 15, height = 15, units = 'in', res = 350)
plot_grid(AXR3,SAUR15,NdhM, HCEF1,ATPD,PSAN,PSBO2,PIP1_5,p9,labels=c('a', 'b',"c","d","e","f","g"), greedy = TRUE, ncol =2, nrow = 4, align = 'v', hjust=0, label_size=35)
dev.off()
