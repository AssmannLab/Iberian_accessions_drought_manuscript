list.of.packages <- c("ggplot2", "viridis", "ggrepel","readr", "tidyverse","tidyr","cowplot","qvalue","dplyr","viridis","ggpubr","ggthemes", "Hmisc", "cowplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)

library(readr)
library(ggplot2)
library(ggrepel)
library(tidyverse)
library(ggpubr)
library(qvalue)
library(viridis)
library(Hmisc)
library(cowplot)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(ggpmisc)
library(qvalue)


df=read_csv("/phenotypes.csv")
head(df)




####Plot1
meanx <- mean(df$LAPdSI_drought,na.rm = TRUE)
print(meanx)
meany <- mean(df$LAP_SD_WW,na.rm = TRUE)
print(meany)
formula <- y ~ x
p1<-df1 %>% 
  mutate(quadrant = case_when(LAPdSI_drought > 0 & LAP_SD_WW > 1.008874   ~ "Q1",
                              LAPdSI_drought <= 0 & LAP_SD_WW > 1.008874  ~ "Q2",
                              LAPdSI_drought <= 0 & LAP_SD_WW <= 1.008874 ~ "Q3",
                              TRUE                                         ~ "Q4")) %>% 
  ggplot(aes(x = LAP_SD_WW, y = LAPdSI_drought)) + 
  geom_point(aes(color=quadrant),alpha = 0.7,  size=9) +  
  geom_smooth(method = "lm", se = T, fill="black", colour="black", size=0.2, alpha = 0.1) +  stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label..,  sep = "~~~")),
                                                                                                          label.x.npc = "right", label.y.npc = "top",
                                                                                                          formula = formula, parse = TRUE, size = 5, colour="black")+
  scale_colour_manual(values = c("#47a569", "#6689c3", "#ce494a", "#e9af41"))+
  geom_text_repel(aes(LAPdSI_drought, LAPdSI_drought, label = name)) + 
  geom_vline(xintercept = 0.0, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 1.008874, color = "black", linetype = "dashed")+
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(plot.title = element_text(family = "Arial", color="#ff9a00", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  ggtitle("Drought")+
  ylab("Leaf area potential") + 
  xlab("Leaf area plasticity index")+
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") 
p1



###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################



####Create an annotation file compatible with the files we are creating.
annotation = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig19_phenotypic potential vs stability GWAS/annotation.csv")
annotation <-annotation[!(annotation$INFO == "downstream_gene_variant"), ]
nrow(annotation)
head(annotation)
annotation$gene <- gsub("(.*)..*", "\\1", annotation$gene)
annotation$gene <-gsub("\\.","",annotation$gene)

gene_description = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig19_phenotypic potential vs stability GWAS/gene_description.csv")
head(gene_description)
annotation <- merge(annotation,gene_description,by= "gene")
head(annotation)




####Plot1
df2a=read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig19_phenotypic potential vs stability GWAS/LAPSI_drought.csv")
head(df2a)
df1b=read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig19_phenotypic potential vs stability GWAS/LAP_SD_WW.csv")
head(df2b)
df2 <- merge(df2a,df2b,by=c("chr", "pos"))
df2 <- merge(df2,annotation,by=c("chr", "pos"))

head(df2)
p <- df2$score.x
p=2*pnorm(-abs(p))
nullRatio <- pi0est(p)
nullRatioS <- pi0est(p, lambda=seq(0.40, 0.95, 0.05), smooth.log.pi0="TRUE")
nullRatioM <- pi0est(p, pi0.method="bootstrap")
qobj = qvalue(p, lambda=seq(0.05, 0.95, 0.1), smooth.log.pi0="TRUE")
qvalues.x <- qobj$qvalues
lfdr <- qobj$lfdr
df2 <-cbind(df2,qvalues.x)

p <- df2$score.y
p=2*pnorm(-abs(p))
nullRatio <- pi0est(p)
nullRatioS <- pi0est(p, lambda=seq(0.40, 0.95, 0.05), smooth.log.pi0="TRUE")
nullRatioM <- pi0est(p, pi0.method="bootstrap")
qobj = qvalue(p, lambda=seq(0.05, 0.95, 0.1), smooth.log.pi0="TRUE")
qvalues.y <- qobj$qvalues
lfdr <- qobj$lfdr
df2 <-cbind(df2,qvalues.y)

df2<-df2 %>% unite(annotationb, Gene_id, pos, sep = " pos. ")
df2 <- df2[order(df2$qvalues.x) ,  ]


write.csv(df2, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig19_phenotypic potential vs stability GWAS/Tables/LAPvsplasticity_drought.csv", row.names = TRUE)


p2<-df2 %>% 
  mutate(quadrant = case_when(score.x > 4 & score.y > 4   ~ "Q1",
                              score.x <= 4 & score.y > 4  ~ "Q2",
                              score.x <= 4 & score.y <= 4 ~ "Q3",
                              TRUE                                         ~ "Q4")) %>% 
  mutate(label = case_when(score.x >= 4 & score.y >= 4 ~  paste(annotationb))) %>% 
  ggplot(aes(x = score.x, y = score.y)) + 
  geom_point(aes(color=quadrant),alpha = 0.5,  size=3) + 
  geom_text_repel(aes(score.x, score.y, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  scale_colour_manual(values = c( "#47a569", "#6689c3", "#ebdfdf","#e9af41"))+
  geom_vline(xintercept = 4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 4, color = "black", linetype = "dashed")+
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(plot.title = element_text(family = "Arial", color="#ff9a00",face="bold",  size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  theme(legend.position="none") +
  scale_x_continuous(limits = c(0, 7), breaks = seq(0, 7, by = 2))+
  scale_y_continuous(limits = c(0, 7), breaks = seq(0, 7, by = 2))+
  ggtitle("Drought")+
  ylab("Leaf area potential: well-watered \n(-log(p-value))") + 
  xlab("Leaf area plasticity \n(-log(p-value))") 

p2


###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################
###################################################################################################
######Leaf area reaction norm
###Open dataframe with phenotypes
####Create an annotation file compatible with the files we are creating.
annotation = read_csv("data/gene_description.csv")
head(annotation)

###Open dataframe with phenotypes
phenotypes = read.csv("data/phenotypes.csv")
head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, LAP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("data/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$LAP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$LAP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "Tables/LAP_SD_WW.csv", row.names = FALSE)


#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, LAPSI_drought)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("data/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$LAPSI_drought) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$LAPSI_drought) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "Tables/LAPSI_drought.csv", row.names = TRUE)

#####Merge df3

df3 <- merge(outputA,outputB,by="gene")
nrow(df3)
head(df3)
df3[df3 == "NAN"] <- NA
df3[complete.cases(df3),]

df3$accession_idsorted.y <- NULL
df3$annotation.x <- NULL
df3$accession_idsorted.x <- NULL
df3$Gene_id.x <- NULL
head(df3)
df3 <- df3 %>% 
  rename(
    LAP_SD_WW = LAP_SD_WW.x,
    symbol = symbol.x,
    LAP_SD_WW = LAP_SD_WW.y,
    LAP_SD_WW = LAP_SD_WW.y)
head(df3)


p3<-df3 %>% 
  mutate(quadrant = case_when(LAP_SD_WW <= -0.4 & LAPSI_drought >= 0.4 ~ "Q1",
                              LAP_SD_WW <= -0.4 & LAPSI_drought <= -0.4 ~ "Q2",
                              LAP_SD_WW >= 0.4 & LAPSI_drought >= 0.4 ~ "Q3",
                              LAP_SD_WW >= 0.4 & LAPSI_drought <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(LAP_SD_WW <= -0.4 & LAPSI_drought >= 0.4 ~  paste(Gene_id.y),
                           LAP_SD_WW <= -0.4 & LAPSI_drought <= -0.4 ~  paste(Gene_id.y),
                           LAP_SD_WW >= 0.4 & LAPSI_drought >= 0.4 ~  paste(Gene_id.y),
                           LAP_SD_WW >= 0.4 & LAPSI_drought <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = LAPSI_drought, y = LAP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  
  
  scale_colour_manual(values = c("#6689c3","#e9af41", "#e6ddd1"))+
  geom_text_repel(aes(LAPSI_drought, LAP_SD_WW, label = label), fontface = 'bold', size=2, force=0.4,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#ff9a00", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Leaf area plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Leaf area potential", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Drought")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))
p3

#####################################3
#####################################3
######

Figure7<-plot_grid(p1,p3,
          p2, p4,
          labels = c('A', 'C','B', 'D'), label_size = 18,
          label_fontfamily = "Arial",
          label_fontface = "bold",ncol = 2)
ggsave("Figure 7.png", plot = Figure7, width = 25, height = 20, units = "cm")
