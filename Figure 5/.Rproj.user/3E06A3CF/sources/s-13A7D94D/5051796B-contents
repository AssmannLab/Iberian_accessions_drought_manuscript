library(Hmisc)
library(readr)
library(tidyverse)
library(dplyr)
library(tibble)
library(scico)
library(tidyr)
library(cowplot)
library(grid)
library(png)
library(magick)
library(qvalue)
library(dplyr)
library(ggrepel)
library(cowplot)

####Create an annotation file compatible with the files we are creating.
annotation = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/gene_description.csv")
head(annotation)
#annotation<-annotation %>% 
 # rename(
  #  Gene_id = gene
  #)
head(annotation)

###Open dataframe with phenotypes
phenotypes = read.csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP.csv", header = TRUE, sep = ",", quote = "\"",
                      dec = ".", fill = TRUE,comment.char = "")
head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, LAP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$LAP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$LAP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/LAP_SD_WW.csv", row.names = FALSE)


#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, LAPSI_drought)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$LAPSI_drought) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$LAPSI_drought) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/LAPSI_drought.csv", row.names = TRUE)

#####Merge df1

df1 <- merge(outputA,outputB,by="gene")
nrow(df1)
head(df1)
df1[df1 == "NAN"] <- NA
df1[complete.cases(df1),]

df1$accession_idsorted.y <- NULL
df1$annotation.x <- NULL
df1$accession_idsorted.x <- NULL
df1$Gene_id.x <- NULL


p1<-df1 %>% 
mutate(quadrant = case_when(LAPSI_drought <= -0.4 & LAP_SD_WW >= 0.4 ~ "Q1",
                            LAPSI_drought <= -0.4 & LAP_SD_WW <= -0.4 ~ "Q2",
                            LAPSI_drought >= 0.4 & LAP_SD_WW >= 0.4 ~ "Q3",
                            LAPSI_drought >= 0.4 & LAP_SD_WW <= -0.4 ~ "Q4",
                            TRUE                                         ~ "Q5")) %>% 
 mutate(label = case_when(LAPSI_drought <= -0.4 & LAP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                          LAPSI_drought <= -0.4 & LAP_SD_WW <= -0.4 ~  paste(Gene_id.y),
                          LAPSI_drought >= 0.4 & LAP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                          LAPSI_drought >= 0.4 & LAP_SD_WW <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = LAPSI_drought, y = LAP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  

  scale_colour_manual(values = c("#6689c3","#e9af41", "#e6ddd1"))+
  geom_text_repel(aes(LAPSI_drought, LAP_SD_WW, label = label), fontface = 'bold', size=2, force=0.4,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+

    theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#ff9a00", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Leaf area plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Leaf area potential", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Drought")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))
p1
  
  #####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3

  
  
  
head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, FTP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$FTP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$FTP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/FTP_SD_WW.csv", row.names = FALSE)


#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, FTPSI_drought)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$FTPSI_drought) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$FTPSI_drought) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/FTPSI_drought.csv", row.names = TRUE)

#####Merge df2

df2 <- merge(outputA,outputB,by="gene")
nrow(df2)
head(df2)
df2[df2 == "NAN"] <- NA
df2[complete.cases(df2),]

df2$accession_idsorted.y <- NULL
df2$annotation.x <- NULL
df2$accession_idsorted.x <- NULL
df2$Gene_id.x <- NULL


p2<-df2 %>% 
  mutate(quadrant = case_when(FTPSI_drought <= -0.4 & FTP_SD_WW >= 0.4 ~ "Q1",
                              FTPSI_drought <= -0.4 & FTP_SD_WW <= -0.4 ~ "Q2",
                              FTPSI_drought >= 0.4 & FTP_SD_WW >= 0.4 ~ "Q3",
                              FTPSI_drought >= 0.4 & FTP_SD_WW <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(FTPSI_drought <= -0.4 & FTP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           FTPSI_drought <= -0.4 & FTP_SD_WW <= -0.4 ~  paste(Gene_id.y),
                           FTPSI_drought >= 0.4 & FTP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           FTPSI_drought >= 0.4 & FTP_SD_WW <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = FTPSI_drought, y = FTP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#6689c3","#e9af41", "#e6ddd1"))+
  geom_text_repel(aes(FTPSI_drought, FTP_SD_WW, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#ff9a00", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Flowering time plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Flowering time potential", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Drought")+
    scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))


p2


#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3




head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, heightP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$heightP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$heightP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/heightP_SD_WW.csv", row.names = FALSE)

#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, HeightPSI_drought)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$HeightPSI_drought) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$HeightPSI_drought) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/HeightPSI_drought.csv", row.names = TRUE)

#####Merge df3

df3 <- merge(outputA,outputB,by="gene")
nrow(df3)
head(df3)
df3[df3 == "NAN"] <- NA
df3[complete.cases(df3),]

df3$accession_idsorted.y <- NULL
df3$annotation.x <- NULL
df3$accession_idsorted.x <- NULL
df3$Gene_id.x <- NULL


p3<-df3 %>% 
  mutate(quadrant = case_when(HeightPSI_drought <= -0.4 & heightP_SD_WW >= 0.4 ~ "Q1",
                              HeightPSI_drought <= -0.4 & heightP_SD_WW <= -0.4 ~ "Q2",
                              HeightPSI_drought >= 0.4 & heightP_SD_WW >= 0.4 ~ "Q3",
                              HeightPSI_drought >= 0.4 & heightP_SD_WW <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(HeightPSI_drought <= -0.4 & heightP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           HeightPSI_drought <= -0.4 & heightP_SD_WW <= -0.4 ~  paste(Gene_id.y),
                           HeightPSI_drought >= 0.4 & heightP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           HeightPSI_drought >= 0.4 & heightP_SD_WW <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = HeightPSI_drought, y = heightP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#6689c3","#e9af41", "#e6ddd1"))+
  geom_text_repel(aes(HeightPSI_drought, heightP_SD_WW, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#ff9a00", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Height plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Height potential", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Drought")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p3


  
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3




head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, YieldP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$YieldP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$YieldP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/YieldP_SD_WW.csv", row.names = FALSE)
#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, YielPSI_drought)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$YielPSI_drought) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$YielPSI_drought) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/YielPSI_drought.csv", row.names = TRUE)

#####Merge df4 

df4 <- merge(outputA,outputB,by="gene")
nrow(df4)
head(df4)
df4[df4 == "NAN"] <- NA
df4[complete.cases(df4),]

df4$accession_idsorted.y <- NULL
df4$annotation.x <- NULL
df4$accession_idsorted.x <- NULL
df4$Gene_id.x <- NULL


p4<-df4 %>% 
  mutate(quadrant = case_when(YielPSI_drought <= -0.4 & YieldP_SD_WW >= 0.4 ~ "Q1",
                              YielPSI_drought <= -0.4 & YieldP_SD_WW <= -0.4 ~ "Q2",
                              YielPSI_drought >= 0.4 & YieldP_SD_WW >= 0.4 ~ "Q3",
                              YielPSI_drought >= 0.4 & YieldP_SD_WW <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(YielPSI_drought <= -0.4 & YieldP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           YielPSI_drought <= -0.4 & YieldP_SD_WW <= -0.4 ~  paste(Gene_id.y),
                           YielPSI_drought >= 0.4 & YieldP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           YielPSI_drought >= 0.4 & YieldP_SD_WW <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = YielPSI_drought, y = YieldP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#6689c3", "#ce494a","#47a569", "#e9af41", "#e6ddd1",  "#e9af41"))+
  geom_text_repel(aes(YielPSI_drought, YieldP_SD_WW, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#ff9a00", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Yield plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Yield potential", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Drought")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p4



#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3




head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, FTP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$FTP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$FTP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/FTP_SD_WW.csv", row.names = FALSE)

#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, LAPSI_photoperiod)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$LAPSI_photoperiod) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$LAPSI_photoperiod) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/LAPSI_photoperiod.csv", row.names = TRUE)

#####Merge df3

df5 <- merge(outputA,outputB,by="gene")
nrow(df5)
head(df5)
df5[df5 == "NAN"] <- NA
df5[complete.cases(df5),]

df5$accession_idsorted.y <- NULL
df5$annotation.x <- NULL
df5$accession_idsorted.x <- NULL
df5$Gene_id.x <- NULL


p5<-df5 %>% 
  mutate(quadrant = case_when(LAPSI_photoperiod <= -0.4 & FTP_SD_WW >= 0.4 ~ "Q1",
                              LAPSI_photoperiod <= -0.4 & FTP_SD_WW <= -0.4 ~ "Q2",
                              LAPSI_photoperiod >= 0.4 & FTP_SD_WW >= 0.4 ~ "Q3",
                              LAPSI_photoperiod >= 0.4 & FTP_SD_WW <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(LAPSI_photoperiod <= -0.4 & FTP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           LAPSI_photoperiod <= -0.4 & FTP_SD_WW <= -0.4 ~  paste(Gene_id.y),
                           LAPSI_photoperiod >= 0.4 & FTP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           LAPSI_photoperiod >= 0.4 & FTP_SD_WW <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = LAPSI_photoperiod, y = FTP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#6689c3", "#ce494a","#47a569", "#e9af41", "#b9c9c9",  "#e9af41"))+
  geom_text_repel(aes(LAPSI_photoperiod, FTP_SD_WW, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#32adb2", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Leaf area plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Leaf area potential: short days", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Photoperiod")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p5


#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3




head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, FTP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$FTP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$FTP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/FTP_SD_WW.csv", row.names = FALSE)

#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, FTPSI_photoperiod)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$FTPSI_photoperiod) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$FTPSI_photoperiod) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/FTPSI_photoperiod.csv", row.names = TRUE)

#####Merge df3

df6 <- merge(outputA,outputB,by="gene")
nrow(df6)
head(df6)
df6[df6 == "NAN"] <- NA
df6[complete.cases(df6),]

df6$accession_idsorted.y <- NULL
df6$annotation.x <- NULL
df6$accession_idsorted.x <- NULL
df6$Gene_id.x <- NULL


p6<-df6 %>% 
  mutate(quadrant = case_when(FTPSI_photoperiod <= -0.4 & FTP_SD_WW >= 0.4 ~ "Q1",
                              FTPSI_photoperiod <= -0.4 & FTP_SD_WW <= -0.4 ~ "Q2",
                              FTPSI_photoperiod >= 0.4 & FTP_SD_WW >= 0.4 ~ "Q3",
                              FTPSI_photoperiod >= 0.4 & FTP_SD_WW <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(FTPSI_photoperiod <= -0.4 & FTP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           FTPSI_photoperiod <= -0.4 & FTP_SD_WW <= -0.4 ~  paste(Gene_id.y),
                           FTPSI_photoperiod >= 0.4 & FTP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           FTPSI_photoperiod >= 0.4 & FTP_SD_WW <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = FTPSI_photoperiod, y = FTP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#ce494a", "#47a569", "#e9af41", "#b9c9c9", "#6689c3", "#6689c3", "#e9af41"))+
  geom_text_repel(aes(FTPSI_photoperiod, FTP_SD_WW, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#32adb2", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Flowering time plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Flowering time potential: short days", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Photoperiod")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p6


#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3




head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, heightP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$heightP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$heightP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/heightP_SD_WW.csv", row.names = FALSE)

#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, HeightPSI_photoperiod)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$HeightPSI_photoperiod) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$HeightPSI_photoperiod) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/HeightPSI_photoperiod.csv", row.names = TRUE)

#####Merge df3

df7 <- merge(outputA,outputB,by="gene")
nrow(df7)
head(df7)
df7[df7 == "NAN"] <- NA
df7[complete.cases(df7),]

df7$accession_idsorted.y <- NULL
df7$annotation.x <- NULL
df7$accession_idsorted.x <- NULL
df7$Gene_id.x <- NULL


p7<-df7 %>% 
  mutate(quadrant = case_when(HeightPSI_photoperiod <= -0.4 & heightP_SD_WW >= 0.4 ~ "Q1",
                              HeightPSI_photoperiod <= -0.4 & heightP_SD_WW <= -0.4 ~ "Q2",
                              HeightPSI_photoperiod >= 0.4 & heightP_SD_WW >= 0.4 ~ "Q3",
                              HeightPSI_photoperiod >= 0.4 & heightP_SD_WW <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(HeightPSI_photoperiod <= -0.4 & heightP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           HeightPSI_photoperiod <= -0.4 & heightP_SD_WW <= -0.4 ~  paste(Gene_id.y),
                           HeightPSI_photoperiod >= 0.4 & heightP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           HeightPSI_photoperiod >= 0.4 & heightP_SD_WW <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = HeightPSI_photoperiod, y = heightP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#6689c3",  "#e9af41", "#b9c9c9","#ce494a","#47a569",  "#e9af41"))+
  geom_text_repel(aes(HeightPSI_photoperiod, heightP_SD_WW, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#32adb2", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Height plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Height potential: short days", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Photoperiod")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p7

#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3




head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, YieldP_SD_WW)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$YieldP_SD_WW) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$YieldP_SD_WW) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/YieldP_SD_WW.csv", row.names = FALSE)

#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, YPSI_photoperiod)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$YPSI_photoperiod) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$YPSI_photoperiod) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/YPSI_photoperiod.csv", row.names = TRUE)

#####Merge df3

df8 <- merge(outputA,outputB,by="gene")
nrow(df8)
head(df8)
df8[df8 == "NAN"] <- NA
df8[complete.cases(df8),]

df8$accession_idsorted.y <- NULL
df8$annotation.x <- NULL
df8$accession_idsorted.x <- NULL
df8$Gene_id.x <- NULL

p8

p8<-df8 %>% 
  mutate(quadrant = case_when(YPSI_photoperiod <= -0.4 & YieldP_SD_WW >= 0.4 ~ "Q1",
                              YPSI_photoperiod <= -0.4 & YieldP_SD_WW <= -0.4 ~ "Q2",
                              YPSI_photoperiod >= 0.4 & YieldP_SD_WW >= 0.4 ~ "Q3",
                              YPSI_photoperiod >= 0.4 & YieldP_SD_WW <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(YPSI_photoperiod <= -0.4 & YieldP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           YPSI_photoperiod <= -0.4 & YieldP_SD_WW <= -0.4 ~  paste(Gene_id.y),
                           YPSI_photoperiod >= 0.4 & YieldP_SD_WW >= 0.4 ~  paste(Gene_id.y),
                           YPSI_photoperiod >= 0.4 & YieldP_SD_WW <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = YPSI_photoperiod, y = YieldP_SD_WW)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#6689c3", "#ce494a", "#47a569", "#e9af41","#b9c9c9","#ce494a","#47a569",  "#e9af41"))+
  geom_text_repel(aes(YPSI_photoperiod, YieldP_SD_WW, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#32adb2", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Yield plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Yield potential: short days", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Photoperiod")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p8


#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3




head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, LAP_LD)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$LAP_LD) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$LAP_LD) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/LAP_LD.csv", row.names = FALSE)

#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, LAPSI_photoperiod)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$LAPSI_photoperiod) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$LAPSI_photoperiod) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/LAPSI_photoperiod.csv", row.names = TRUE)

#####Merge df3

df9 <- merge(outputA,outputB,by="gene")
nrow(df9)
head(df9)
df9[df9 == "NAN"] <- NA
df9[complete.cases(df9),]

df9$accession_idsorted.y <- NULL
df9$annotation.x <- NULL
df9$accession_idsorted.x <- NULL
df9$Gene_id.x <- NULL


p9<-df9 %>% 
  mutate(quadrant = case_when(LAPSI_photoperiod <= -0.4 & LAP_LD >= 0.4 ~ "Q1",
                              LAPSI_photoperiod <= -0.4 & LAP_LD <= -0.4 ~ "Q2",
                              LAPSI_photoperiod >= 0.4 & LAP_LD >= 0.4 ~ "Q3",
                              LAPSI_photoperiod >= 0.4 & LAP_LD <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(LAPSI_photoperiod <= -0.4 & LAP_LD >= 0.4 ~  paste(Gene_id.y),
                           LAPSI_photoperiod <= -0.4 & LAP_LD <= -0.4 ~  paste(Gene_id.y),
                           LAPSI_photoperiod >= 0.4 & LAP_LD >= 0.4 ~  paste(Gene_id.y),
                           LAPSI_photoperiod >= 0.4 & LAP_LD <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = LAPSI_photoperiod, y = LAP_LD)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#ce494a", "#47a569", "#b9c9c9"))+
  geom_text_repel(aes(LAPSI_photoperiod, LAP_LD, label = label), fontface = 'bold', size=1, force=0.1,segment.size = 0.2,arrow = arrow(length = unit(0.005, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#32adb2", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Leaf area plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Leaf area potential: long days", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Photoperiod")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p9



#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3




head(phenotypes)


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, FTP_LD)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$FTP_LD) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$FTP_LD) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/FTP_LD.csv", row.names = FALSE)


#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, FTPSI_photoperiod)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$FTPSI_photoperiod) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$FTPSI_photoperiod) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/FTPSI_photoperiod.csv", row.names = TRUE)

#####Merge df3

df10 <- merge(outputA,outputB,by="gene")
nrow(df10)
head(df10)
df10[df10 == "NAN"] <- NA
df10[complete.cases(df10),]

df10$accession_idsorted.y <- NULL
df10$annotation.x <- NULL
df10$accession_idsorted.x <- NULL
df10$Gene_id.x <- NULL


p10<-df10 %>% 
  mutate(quadrant = case_when(FTPSI_photoperiod <= -0.4 & FTP_LD >= 0.4 ~ "Q1",
                              FTPSI_photoperiod <= -0.4 & FTP_LD <= -0.4 ~ "Q2",
                              FTPSI_photoperiod >= 0.4 & FTP_LD >= 0.4 ~ "Q3",
                              FTPSI_photoperiod >= 0.4 & FTP_LD <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(FTPSI_photoperiod <= -0.4 & FTP_LD >= 0.4 ~  paste(Gene_id.y),
                           FTPSI_photoperiod <= -0.4 & FTP_LD <= -0.4 ~  paste(Gene_id.y),
                           FTPSI_photoperiod >= 0.4 & FTP_LD >= 0.4 ~  paste(Gene_id.y),
                           FTPSI_photoperiod >= 0.4 & FTP_LD <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = FTPSI_photoperiod, y = FTP_LD)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#ce494a", "#47a569", "#b9c9c9"))+
  geom_text_repel(aes(FTPSI_photoperiod, FTP_LD, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#32adb2", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Flowering time plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Flowering time potential: long days", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Photoperiod")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p10


#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, heightP_LD)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$heightP_LD) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$heightP_LD) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/heightP_LD.csv", row.names = FALSE)

#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, HeightPSI_photoperiod)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$HeightPSI_photoperiod) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$HeightPSI_photoperiod) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/HeightPSI_photoperiod.csv", row.names = TRUE)

#####Merge df3

df11 <- merge(outputA,outputB,by="gene")
nrow(df11)
head(df11)
df11[df11 == "NAN"] <- NA
df11[complete.cases(df11),]

df11$accession_idsorted.y <- NULL
df11$annotation.x <- NULL
df11$accession_idsorted.x <- NULL
df11$Gene_id.x <- NULL


p11<-df11 %>% 
  mutate(quadrant = case_when(HeightPSI_photoperiod <= -0.4 & heightP_LD >= 0.4 ~ "Q1",
                              HeightPSI_photoperiod <= -0.4 & heightP_LD <= -0.4 ~ "Q2",
                              HeightPSI_photoperiod >= 0.4 & heightP_LD >= 0.4 ~ "Q3",
                              HeightPSI_photoperiod >= 0.4 & heightP_LD <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(HeightPSI_photoperiod <= -0.4 & heightP_LD >= 0.4 ~  paste(Gene_id.y),
                           HeightPSI_photoperiod <= -0.4 & heightP_LD <= -0.4 ~  paste(Gene_id.y),
                           HeightPSI_photoperiod >= 0.4 & heightP_LD >= 0.4 ~  paste(Gene_id.y),
                           HeightPSI_photoperiod >= 0.4 & heightP_LD <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = HeightPSI_photoperiod, y = heightP_LD)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#ce494a","#47a569", "#b9c9c9","#47a569", "#e9af41", "#CCE5CC",  "#CCE5CC"))+
  geom_text_repel(aes(HeightPSI_photoperiod, heightP_LD, label = label), fontface = 'bold', size=2, force=0.1,segment.size = 0.5,arrow = arrow(length = unit(0.01, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
    theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#32adb2", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Height plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Height potential: long days", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Photoperiod")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p11

#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3
#####################################3


##res<-rcorr(as.matrix(phenotypes))
##AA<-signif(res$r, 2)
##write.csv(AA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Iberian_PxExP_corr.csv")


#####Run autocorrelation matrix Phenotype A
phenotypesselected<- select(phenotypes, YieldP_LD)
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputA <-cbind(accession_idsorted,AA)
outputA <- outputA[-1, 1:2]
outputA <- as.data.frame(outputA)
outputA <- outputA[order(-outputA$YieldP_LD) ,  ]
head(outputA)
outputA <- outputA %>% 
  rownames_to_column(var = "gene")
outputA <- merge(outputA,annotation,by="gene")
outputA <- outputA[order(-outputA$YieldP_LD) ,  ]
head(outputA, n=100)
tail(outputA, n=50)
head(outputA)
write.csv(outputA, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/heightP_LD.csv", row.names = FALSE)

#####Run autocorrelation matrix condition B
phenotypesselected<- select(phenotypes, YPSI_photoperiod)
accession_id1<-phenotypes$accession_id
accession_id1<-phenotypes$accession_id
selected <-cbind(accession_id1, phenotypesselected)
head(selected)
transposedfinal = read_csv("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/transposedfinal.csv")
head(transposedfinal)
colnames(transposedfinal)[colnames(transposedfinal)=="accession_id"] <- "accession_id1"
final<-merge(selected, transposedfinal, by = "accession_id1", sort = TRUE)
head(final)
accession_idsorted<-final$accession_id1
final$accession_id1 <- NULL
res<-rcorr(as.matrix(final), type = c("pearson","spearman"))
AA<-signif(res$r, 2)
outputB <-cbind(accession_idsorted,AA)
outputB <- outputB[-1, 1:2]
outputB <- as.data.frame(outputB)
outputB <- outputB[order(-outputB$YPSI_photoperiod) ,  ]
head(outputB)
outputB <- outputB %>% 
  rownames_to_column(var = "gene")
outputB <- merge(outputB,annotation,by="gene")
outputB <- outputB[order(-outputB$YPSI_photoperiod) ,  ]
head(outputB, n=100)
tail(outputB, n=50)
head(outputB)

write.csv(outputB, "/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Tables/YPSI_photoperiod.csv", row.names = TRUE)

#####Merge df3

df12 <- merge(outputA,outputB,by="gene")
nrow(df12)
head(df12)
df12[df12 == "NAN"] <- NA
df12[complete.cases(df12),]

df12$accession_idsorted.y <- NULL
df12$annotation.x <- NULL
df12$accession_idsorted.x <- NULL
df12$Gene_id.x <- NULL


p12<-df12 %>% 
  mutate(quadrant = case_when(YPSI_photoperiod <= -0.4 & YieldP_LD >= 0.4 ~ "Q1",
                              YPSI_photoperiod <= -0.4 & YieldP_LD <= -0.4 ~ "Q2",
                              YPSI_photoperiod >= 0.4 & YieldP_LD >= 0.4 ~ "Q3",
                              YPSI_photoperiod >= 0.4 & YieldP_LD <= -0.4 ~ "Q4",
                              TRUE                                         ~ "Q5")) %>% 
  mutate(label = case_when(YPSI_photoperiod <= -0.4 & YieldP_LD >= 0.4 ~  paste(Gene_id.y),
                           YPSI_photoperiod <= -0.4 & YieldP_LD <= -0.4 ~  paste(Gene_id.y),
                           YPSI_photoperiod >= 0.4 & YieldP_LD >= 0.4 ~  paste(Gene_id.y),
                           YPSI_photoperiod >= 0.4 & YieldP_LD <= -0.4 ~  paste(Gene_id.y))) %>% 
  
  ggplot(aes(x = YPSI_photoperiod, y = YieldP_LD)) + 
  geom_point(aes(color=quadrant),alpha = 0.8,  size=2) +  
  scale_colour_manual(values = c("#ce494a", "#47a569",  "#b9c9c9","#e9af41", "#6689c3", "#6689c3", "#e9af41"))+
  geom_text_repel(aes(YPSI_photoperiod, YieldP_LD, label = label), fontface = 'bold', size=1, force=0.1,segment.size = 0.2,arrow = arrow(length = unit(0.005, 'npc')),family = 'Arial',
                  fontface = 'bold',
                  box.padding = unit(0.35, "lines"),
                  point.padding = unit(0.5, "lines"),
                  segment.color = 'grey50') + 
  geom_vline(xintercept = 0.4, color = "black", linetype = "dashed")+
  geom_vline(xintercept = -0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = 0.4, color = "black", linetype = "dashed")+
  geom_hline(yintercept = -0.4, color = "black", linetype = "dashed")+
  
  theme(axis.line = element_line(size=1, colour = "black"),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1), panel.background = element_blank(), axis.ticks.length=unit(0.3,"cm"))  +
  theme(axis.text = element_text(family = "Arial", color="black", size=12)) +
  theme(axis.title = element_text(family = "Arial", color="black", face="bold", size=15)) +  
  theme(legend.position="none") + 
  theme(plot.title = element_text(family = "Arial", color="#32adb2", face="bold", size=25)) +  theme(panel.background = element_rect(fill = 'white')) +
  xlab(expression(bold(atop("Yield plasticity", paste("transcriptome-wide association ", (r[s]))))))+ 
  ylab(expression(bold(atop("Yield potential: long days", paste("transcriptome-wide association ", (r[s]))))))+ 
  ggtitle("Photoperiod")+
  scale_y_continuous(limits = c(-0.8, 0.8), breaks = seq(-0.8, 0.8, by = 0.4))

p12



plot_grid(p1,p5,p9, p2,p6,p10, p3,p7, p11,p4, p8,p12, labels=c("A", "E", "I", "B", "F", "J","C", "G", "K", "D", "H","L"), greedy = TRUE, ncol = 3, nrow = 4, align = 'v', hjust=0, label_size=15)


png("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig28_transcriptome_potentialvsstability/Fig28.png", width = 20, height = 20, units = 'in', res = 250)
plot_grid(p1,p5,p9, p2,p6,p10, p3,p7, p11,p4, p8,p12, labels=c("A", "E", "I", "B", "F", "J","C", "G", "K", "D", "H","L"), greedy = TRUE, ncol = 3, nrow = 4, align = 'v', hjust=0, label_size=15)

dev.off()

######borrar lo de debajo





M1 <- image_read("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/P1.png")
M2 <- image_read("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/P2.png")
M3 <- image_read("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/P3.png")
M4 <- image_read("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/P4.png")

M5 <- image_read("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/P5.png")
M6 <- image_read("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/P6.png")
M7 <- image_read("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/P7.png")
M8 <- image_read("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/P8.png")

plot_grid(rasterGrob(M1),rasterGrob(M5),rasterGrob(M2), rasterGrob(M6),rasterGrob(M3),rasterGrob(M7),rasterGrob(M4),rasterGrob(M8),labels=c("A", "E",  "B", "F","C", "G", "D", "H"), greedy = TRUE, ncol = 2, nrow = 4, align = 'v', hjust=0, label_size=15)
png("/Users/angel_admin/Box/Assmann_Lab/2_Researcher_Data/1_Current/Angel_Ferrero-Serrano/Spanish accessions/Fig26_transcriptome_reaction norm/Fig26.png", width = 20, height = 15, units = 'in', res = 250)
plot_grid(rasterGrob(M1),rasterGrob(M5),rasterGrob(M2), rasterGrob(M6),rasterGrob(M3),rasterGrob(M7),rasterGrob(M4),rasterGrob(M8),labels=c("A", "E",  "B", "F","C", "G", "D", "H"), greedy = TRUE, ncol = 2, nrow = 4, align = 'v', hjust=0, label_size=15)
dev.off()


